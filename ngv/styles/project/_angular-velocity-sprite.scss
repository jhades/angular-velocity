/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$block-item-name: 'block-item';
$block-item-x: 0px;
$block-item-y: 0px;
$block-item-offset-x: 0px;
$block-item-offset-y: 0px;
$block-item-width: 10px;
$block-item-height: 10px;
$block-item-total-width: 10px;
$block-item-total-height: 55px;
$block-item-image: 'angular-velocity-sprite.png';
$block-item: (0px, 0px, 0px, 0px, 10px, 10px, 10px, 55px, 'angular-velocity-sprite.png', 'block-item', );
$left-arrow-name: 'left_arrow';
$left-arrow-x: 0px;
$left-arrow-y: 15px;
$left-arrow-offset-x: 0px;
$left-arrow-offset-y: -15px;
$left-arrow-width: 10px;
$left-arrow-height: 10px;
$left-arrow-total-width: 10px;
$left-arrow-total-height: 55px;
$left-arrow-image: 'angular-velocity-sprite.png';
$left-arrow: (0px, 15px, 0px, -15px, 10px, 10px, 10px, 55px, 'angular-velocity-sprite.png', 'left_arrow', );
$right-arrow-name: 'right_arrow';
$right-arrow-x: 0px;
$right-arrow-y: 30px;
$right-arrow-offset-x: 0px;
$right-arrow-offset-y: -30px;
$right-arrow-width: 10px;
$right-arrow-height: 10px;
$right-arrow-total-width: 10px;
$right-arrow-total-height: 55px;
$right-arrow-image: 'angular-velocity-sprite.png';
$right-arrow: (0px, 30px, 0px, -30px, 10px, 10px, 10px, 55px, 'angular-velocity-sprite.png', 'right_arrow', );
$zoom-out-name: 'zoom-out';
$zoom-out-x: 0px;
$zoom-out-y: 45px;
$zoom-out-offset-x: 0px;
$zoom-out-offset-y: -45px;
$zoom-out-width: 10px;
$zoom-out-height: 10px;
$zoom-out-total-width: 10px;
$zoom-out-total-height: 55px;
$zoom-out-image: 'angular-velocity-sprite.png';
$zoom-out: (0px, 45px, 0px, -45px, 10px, 10px, 10px, 55px, 'angular-velocity-sprite.png', 'zoom-out', );
$spritesheet-width: 10px;
$spritesheet-height: 55px;
$spritesheet-image: 'angular-velocity-sprite.png';
$spritesheet-sprites: ($block-item, $left-arrow, $right-arrow, $zoom-out, );
$spritesheet: (10px, 55px, 'angular-velocity-sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
